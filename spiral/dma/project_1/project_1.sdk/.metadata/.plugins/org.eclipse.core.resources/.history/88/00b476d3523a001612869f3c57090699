/******************************************************************************
*
* Copyright (C) 2009 - 2014 Xilinx, Inc.  All rights reserved.
*
* Permission is hereby granted, free of charge, to any person obtaining a copy
* of this software and associated documentation files (the "Software"), to deal
* in the Software without restriction, including without limitation the rights
* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the Software is
* furnished to do so, subject to the following conditions:
*
* The above copyright notice and this permission notice shall be included in
* all copies or substantial portions of the Software.
*
* Use of the Software is limited solely to applications:
* (a) running on a Xilinx device, or
* (b) that interact with a Xilinx device through a bus or interconnect.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
* XILINX  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
* OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
* SOFTWARE.
*
* Except as contained in this notice, the name of the Xilinx shall not be used
* in advertising or otherwise to promote the sale, use or other dealings in
* this Software without prior written authorization from Xilinx.
*
******************************************************************************/

/*
 * helloworld.c: simple test application
 *
 * This application configures UART 16550 to baud rate 9600.
 * PS7 UART (Zynq) is not initialized by this application, since
 * bootrom/bsp configures it to baud rate 115200
 *
 * ------------------------------------------------
 * | UART TYPE   BAUD RATE                        |
 * ------------------------------------------------
 *   uartns550   9600
 *   uartlite    Configurable only in HW design
 *   ps7_uart    115200 (configured by bootrom/bsp)
 */

#include <stdio.h>
#include "platform.h"

#include <xstatus.h>
#include "myip.h"
#include <xil_printf.h>
#include <xil_types.h>

    #include "xil_cache.h"



typedef struct myDescriptor {
	unsigned int * next_desc;
	unsigned int * data_ptr;
	unsigned int   trans_type;
}Desc;

int main()
{
    init_platform();
    Xil_DCacheDisable();

    Desc desc0;
    Desc desc1;
    Desc desc2;
    Desc desc3;

    unsigned int data0[1024];
    unsigned int data1[1024];
    unsigned int data2[1024];
    unsigned int data3[1024];

    int i;

    for (i = 0; i <1024; i++){
    	data0[i] = 0x00000000+i;

    	data2[i] = 0x77777777 + i;

    }

    xil_printf("==Test begin\n\r");
    xil_printf("==Step1. Initial descriptor and data \n\r");

    desc0.next_desc = (unsigned int *)(& desc1);
    desc1.next_desc = (unsigned int *)(& desc2);
    desc2.next_desc = (unsigned int *)(& desc3);
    desc3.next_desc = 0;
    desc0.data_ptr = data0;
    desc1.data_ptr = data1;
    desc2.data_ptr = data2;
    desc3.data_ptr = data3;
    desc0.trans_type = 0;//read
    desc1.trans_type = 1;//read
    desc2.trans_type = 0;//read
    desc3.trans_type = 1;//read

    xil_printf("==Step2. Flush out dcache \n\r");

    xil_printf("==Step3. Program myip\n\r");

    MYIP_mWriteReg(0x4fff0000, MYIP_S00_AXI_LITE_SLV_REG0_OFFSET, &desc0);
    xil_printf("==Step3. Program myip\n\r");
    MYIP_mWriteReg(0x4fff0000, MYIP_S00_AXI_LITE_SLV_REG1_OFFSET, &desc3);
    xil_printf("==Step3. Program myip\n\r");
    MYIP_mWriteReg(0x4fff0000, MYIP_S00_AXI_LITE_SLV_REG2_OFFSET, 1);

    cleanup_platform();
    return 0;
}
